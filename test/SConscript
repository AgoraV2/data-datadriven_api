# Copyright AllSeen Alliance. All rights reserved.
#
#    Permission to use, copy, modify, and/or distribute this software for any
#    purpose with or without fee is hereby granted, provided that the above
#    copyright notice and this permission notice appear in all copies.
#
#    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

Import('env')

testenv = env.Clone()
testenv.Append(CPPPATH = ['generated'])
testenv.Prepend(LIBS = ['alljoyn_ddapi'])

# always build with NDEBUG unset so we can use assert()
defs = testenv['CPPDEFINES']
if 'NDEBUG' in defs:
    defs.remove('NDEBUG')
testenv.Replace(CPPDEFINES = defs)

# Use bundled router?
#if int(ARGUMENTS.get('BRTEST', 0)):
#    testenv.Append(LIBPATH = ['$DISTDIR' + '/cpp/lib'])

if testenv['BR'] == 'on':
    # Build tests with bundled daemon support
    testenv.Prepend(LIBS = [testenv['ajrlib']])

tests = []

for test in Glob('*'):
    if test.srcnode().isdir():
        apps = env.SConscript(test.name + '/SConscript', exports={'env':testenv})
        tests.append(apps)

Return('tests')
