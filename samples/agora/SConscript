# Copyright (c) 2014, AllSeen Alliance. All rights reserved.
#
#    Permission to use, copy, modify, and/or distribute this software for any
#    purpose with or without fee is hereby granted, provided that the above
#    copyright notice and this permission notice appear in all copies.
#
#    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

Import('env')

apps = []

# generate code
generated = env.CodeGen('dm-agora-demo-v2')
generated_src = filter(lambda f: not '.h' in f.name, generated)

################################################

agora = env.Program(target='agora',
                       source=['agora.cc', generated_src])
apps.append(agora)

################################################
# SAGEMCOM test binaries for interop tests

scom_presence_stub = env.Program(target='scom-presence-stub',
                       source=['scom-presence-stub.cc', generated_src])
apps.append(scom_presence_stub)


scom_call_notifier_stub = env.Program(target='scom-call-notifier-stub',
                        source=['scom-call-notifier-stub.cc', generated_src])
apps.append(scom_call_notifier_stub)


scom_logger = env.Program(target='scom-logger',
                        source=['scom-logger.cc', generated_src])
apps.append(scom_logger)

################################################


Return('apps')
